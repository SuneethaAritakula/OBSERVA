package com.OBSERVAMonitor;

import java.awt.Color;
import java.awt.RenderingHints.Key;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.testng.Assert;
import org.testng.annotations.Test;


@Test
public class SilencePage 
{
	
	   String Red = "rgba(255, 54, 54, 1)";
	   String Orange = "rgba(255, 178, 54, 1)";
	   String Green = "rgba(24, 206, 15, 1)";
	   String Black = "rgba(44, 44, 44, 1)";

	
	   @FindBy(xpath = " //*[text()='Silence']")
	   WebElement lnkSilence;
	
	// This method is used to click Silent tab on left side panel
	   public void SilencePage() 
			{
				
			lnkSilence.click();
			
			}
	
	// This method is used for capturing all Alarm card titles colors under silence page - works well
		
		public void CaptureAllSilenceAlarmsColor(WebDriver driver) throws InterruptedException 
		   {
			
			     String Alarmcolor = null;
			     List<WebElement> Title = driver.findElements(By.xpath("//*[@class= 'card-title']"));
			     System.out.println("Total Inputs(alarms) on Silence page:"+Title.size());
			     int Titlesize = Title.size();
			     for(int i = 0;i<Titlesize;i++)	
			          {
				 
				       String TitleName =  Title.get(i).getText();
				     //  System.out.println(TitleName); 
				       if (i<Titlesize-1) 
				       		{
			                  ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", Title.get(i+1));
			                }
            			
			           String strHeart = driver.findElement(By.id("overall-state-"+i)).getAttribute("class");
			
						if (strHeart.contains("danger")) 
						{
							System.out.println(TitleName + " Overall alarm status - Red");
							Alarmcolor = "Red";
						
						}else if(strHeart.contains("warning")) {
							
							System.out.println(TitleName+ " Overall alarm status - Orange");
							Alarmcolor = "Orange";
					
						}
						
						else if(strHeart.contains("success")) 
						{
							
							System.out.println(TitleName +" Overall alarm status - Green");
							Alarmcolor = "Green";
							
			            }
						else if (strHeart.contains("default")) 
						{
							
							System.out.println(TitleName + " Overall alarm status - Black");
							Alarmcolor = "Grey";
						}
						
						
      
		   //calling common method
			
			
					
			SilencePage s =new SilencePage();
			String AlarmComponentsColor = s.captureSilenceAlarmComponents(driver, i);
			if (Alarmcolor.equalsIgnoreCase(AlarmComponentsColor))
					
					{
				       System.out.println(TitleName+  " color status("+Alarmcolor+")  and overall components color status("+AlarmComponentsColor+ ")be equal - Pass" );
					}
			
			else {
				       System.out.println(TitleName+  " color status("+Alarmcolor+")  and overall components color status("+AlarmComponentsColor+ ")be equal - Fail" );
				        
				
			     }
		    }		
		 }
					
			     
    //This method is used for capturing Audio, pad and data colors for each alarm under silence page - this is working well
		
	public String captureSilenceAlarmComponents(WebDriver driver, int index)
	
	   {
		    String alarmOverallComponentsColor = null;	
		    String Red = "rgba(255, 54, 54, 1)";
		    String Orange = "rgba(255, 178, 54, 1)";
		    String Green = "rgba(24, 206, 15, 1)";
		    String Grey = "rgba(136, 136, 136, 1)";
		
		   String AudioAlarm = driver.findElements(By.xpath("//*[starts-with(@id,'audio-overall-')]")).get(index).getCssValue("color").trim();
		   if(AudioAlarm.equalsIgnoreCase(Red) ) {
			   System.out.println("Audio Alarm "+(index+1)+" is: Red");
		   } else if(AudioAlarm.equalsIgnoreCase(Orange))
		   {
			   System.out.println("Audio Alarm "+(index+1)+" is: Orange");
		   }else if(AudioAlarm.equalsIgnoreCase(Green)) {
			   System.out.println("Audio Alarm "+(index+1)+" is: Green");
		   }else if(AudioAlarm.equalsIgnoreCase(Grey)){
			   System.out.println("Audio Alarm "+(index+1)+" is: Grey");
//		   }
		   }
		   
		
		   String PADAlarm = driver.findElements(By.xpath("//*[starts-with(@id,'pad-overall-')]")).get(index).getCssValue("color").trim();
		  // System.out.println("PAD Alarm "+(index+1)+" is: "+PADAlarm);
		   if(PADAlarm.equalsIgnoreCase(Red) ) {
			   System.out.println("PAD Alarm "+(index+1)+" is: Red");
		   } else if(PADAlarm.equalsIgnoreCase(Orange))
		   {
			   System.out.println("PAD Alarm "+(index+1)+" is: Orange");
		   }else if(PADAlarm.equalsIgnoreCase(Green)) {
			   System.out.println("PAD Alarm "+(index+1)+" is: Green");
		   }
		   else if(PADAlarm.equalsIgnoreCase(Grey)){
			   System.out.println("PAD Alarm "+(index+1)+" is: Grey");
		   }
		
		   String DATAAlarm = driver.findElements(By.xpath("//*[starts-with(@id,'data-overall-')]")).get(index).getCssValue("color").trim();
		   //System.out.println("DATA Alarm "+(index+1)+" is: "+DATAAlarm);
		   
		   if(DATAAlarm.equalsIgnoreCase(Red) ) {
			   System.out.println("DATA Alarm "+(index+1)+" is: Red");
		   } else if(DATAAlarm.equalsIgnoreCase(Orange))
		   {
			   System.out.println("DATA Alarm "+(index+1)+" is: Orange");
		   }else if(DATAAlarm.equalsIgnoreCase(Green)) {
			   System.out.println("DATA Alarm "+(index+1)+" is: Green");
		   }
		   else if(DATAAlarm.equalsIgnoreCase(Grey)){
			   System.out.println("DATA Alarm "+(index+1)+" is: Grey");
		   }
		   
		   String allAlarmComponentsColor = AudioAlarm +PADAlarm + DATAAlarm ; 
		  // System.out.println(allAlarmComponentsColor);
		   
		   if(allAlarmComponentsColor.contains((Red)))
				 
			{
				//System.out.println("alarm is in Red");
			   alarmOverallComponentsColor = "Red";
					
				
			}else if((allAlarmComponentsColor.contains(Orange))) {
					
					//System.out.println("alarm is in Orange");
				alarmOverallComponentsColor = "Orange";
				
			
				}else if((allAlarmComponentsColor.contains(Green))) {
					
					//System.out.println("alarm is in Green");
					alarmOverallComponentsColor = "Green";
				}
					
					else if ((allAlarmComponentsColor.contains(Grey))) {
					
					//System.out.println("alarm is in Grey");
					alarmOverallComponentsColor = "Grey";
						
			         			}
		  
		return alarmOverallComponentsColor ;
		
		   }
		

		
	//22/09/19 - trying to find individual left & right alarms
	
@SuppressWarnings("unlikely-arg-type")
public void AudioSubComponentsColors(WebDriver driver) throws InterruptedException
	{
	
	
	
	
	//24/09/2019 - capturing individual alarms for Audio
	List<WebElement> AudioSubComponents =driver.findElements(By.xpath("//div[starts-with(@id,'audio-row-0')]//*[@class='col-md-2']//*[contains(@class ,'fa fa-circle fa-fw icon')]"));
		
	System.out.println(AudioSubComponents.size());
	
	//List<WebElement> abc =driver.findElements(By.xpath("//*[@class='col-md-2'][1]//*[@class='card card-stats']//*[text() = 'R']")); 
	for (WebElement audioSubComponent:AudioSubComponents)
	  {
		     
				System.out.println(audioSubComponent.getAttribute("class"));
			
			
	   }
	
			
					
				
		
	//24/09/2019 - putting audio alarms in a loop to find out the overall audio alarm		#
	
	
	String danger = "Red";
   String warning = "Orange";
    String success = "Green";
    //String default = "Grey";
			
	
			if (AudioSubComponents.contains(danger))
			{
				System.out.println("alarm is in Red");
			
				
			
 			}else if((AudioSubComponents.contains(warning))) {
				
				System.out.println("alarm is in Orange");
			
		
			}else if((AudioSubComponents.contains(success))) {
				
				System.out.println("alarm is in Green");
			}
				
				//else if ((AudioSubComponents.contains("default"))) {
					
					//System.out.println("alarm is in Grey");
					
				}
				}



	
